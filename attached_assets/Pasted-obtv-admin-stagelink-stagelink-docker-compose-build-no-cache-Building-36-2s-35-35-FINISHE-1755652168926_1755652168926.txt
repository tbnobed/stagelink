obtv-admin@stagelink:~/stagelink$ docker-compose build --no-cache
[+] Building 36.2s (35/35) FINISHED
 => [internal] load local bake definitions                                                                                     0.0s
 => => reading from stdin 521B                                                                                                 0.0s
 => [internal] load build definition from Dockerfile                                                                           0.0s
 => => transferring dockerfile: 17.78kB                                                                                        0.0s
 => [internal] load metadata for docker.io/library/node:18-alpine                                                              0.3s
 => [internal] load .dockerignore                                                                                              0.0s
 => => transferring context: 257B                                                                                              0.0s
 => [internal] load build context                                                                                              0.0s
 => => transferring context: 46.96kB                                                                                           0.0s
 => CACHED [builder  1/12] FROM docker.io/library/node:18-alpine@sha256:8d6421d663b4c28fd3ebc498332f249011d118945588d0a35cb9b  0.0s
 => CACHED [builder  2/12] WORKDIR /app                                                                                        0.0s
 => [production  2/17] RUN apk add --no-cache dumb-init postgresql-client                                                      1.3s
 => [builder  3/12] COPY package*.json ./                                                                                      0.0s
 => [builder  4/12] RUN npm ci --include=dev                                                                                  12.8s
 => [production  3/17] WORKDIR /app                                                                                            0.1s
 => [production  4/17] RUN addgroup -g 1001 -S nodejs                                                                          0.3s
 => [production  5/17] RUN adduser -S nodejs -u 1001                                                                           0.4s
 => [production  6/17] COPY package*.json ./                                                                                   0.0s
 => [production  7/17] RUN npm ci --only=production && npm install drizzle-kit pg && npm cache clean --force                  17.1s
 => [builder  5/12] COPY . .                                                                                                   0.1s
 => [builder  6/12] RUN npx vite build && npx esbuild server/production.ts --platform=node --packages=external --bundle --for  7.8s
 => [production  8/17] RUN node -e "require('qrcode'); require('drizzle-orm'); require('pg'); console.log('All packages verif  0.5s
 => [builder  7/12] RUN npx esbuild server/db-docker.ts --platform=node --packages=external --bundle --format=esm --outfile=d  1.0s
 => [builder  8/12] RUN mkdir -p dist/utils                                                                                    0.3s
 => [builder  9/12] RUN npx esbuild server/setup-admin.ts --platform=node --packages=external --bundle --format=esm --outfile  1.0s
 => [builder 10/12] RUN npx esbuild server/auth.ts --platform=node --packages=external --bundle --format=esm --outfile=dist/a  1.0s
 => [builder 11/12] RUN npx esbuild server/utils/shortCode.ts --platform=node --packages=external --bundle --format=esm --out  1.0s
 => [builder 12/12] RUN ls -la dist/ && test -f dist/production.js && test -d dist/public && test -f dist/db-docker.js         0.4s
 => [production  9/17] COPY --from=builder --chown=nodejs:nodejs /app/dist ./dist                                              0.0s
 => [production 10/17] COPY --from=builder --chown=nodejs:nodejs /app/drizzle.config.ts ./drizzle.config.ts                    0.0s
 => [production 11/17] COPY --from=builder --chown=nodejs:nodejs /app/shared ./shared                                          0.0s
 => [production 12/17] COPY --from=builder --chown=nodejs:nodejs /app/server ./server                                          0.0s
 => [production 13/17] COPY --chown=nodejs:nodejs migrate-session-tokens.sql ./migrate-session-tokens.sql                      0.0s
 => [production 14/17] COPY --chown=nodejs:nodejs apply-session-token-migration.sh ./apply-session-token-migration.sh          0.0s
 => [production 15/17] COPY --chown=nodejs:nodejs DOCKER-SESSION-TOKEN-FIX.md ./DOCKER-SESSION-TOKEN-FIX.md                    0.0s
 => [production 16/17] RUN cat > /app/start.sh << 'EOF'                                                                        0.2s
 => [production 17/17] RUN chmod +x /app/start.sh && chown nodejs:nodejs /app/start.sh                                         0.5s
 => exporting to image                                                                                                         8.6s
 => => exporting layers                                                                                                        8.6s
 => => writing image sha256:248ffd55e3c861780ef4843d6da7e25f6a6aecf42a74d6ef46f5f29c95806ff8                                   0.0s
 => => naming to docker.io/library/stagelink-app                                                                               0.0s
 => resolving provenance for metadata file                                                                                     0.0s
[+] Building 1/1
 ✔ stagelink-app  Built                                                                                                        0.0s
obtv-admin@stagelink:~/stagelink$ docker-compose up -d
[+] Running 4/4
 ✔ Network stagelink_virtual-audience-network  Created                                                                         0.1s
 ✔ Volume "stagelink_postgres_data"            Created                                                                         0.0s
 ✔ Container virtual-audience-db-v2            Healthy                                                                        10.9s
 ✔ Container virtual-audience-app-v2           Started                                                                        11.1s
obtv-admin@stagelink:~/stagelink$ docker-compose logs -f
virtual-audience-app-v2  | Waiting for database...
virtual-audience-db-v2   | The files belonging to this database system will be owned by user "postgres".
virtual-audience-db-v2   | This user must also own the server process.
virtual-audience-db-v2   |
virtual-audience-db-v2   | The database cluster will be initialized with locale "en_US.utf8".
virtual-audience-db-v2   | The default database encoding has accordingly been set to "UTF8".
virtual-audience-db-v2   | The default text search configuration will be set to "english".
virtual-audience-db-v2   |
virtual-audience-db-v2   | Data page checksums are disabled.
virtual-audience-db-v2   |
virtual-audience-db-v2   | fixing permissions on existing directory /var/lib/postgresql/data ... ok
virtual-audience-db-v2   | creating subdirectories ... ok
virtual-audience-db-v2   | selecting dynamic shared memory implementation ... posix
virtual-audience-db-v2   | selecting default max_connections ... 100
virtual-audience-db-v2   | selecting default shared_buffers ... 128MB
virtual-audience-db-v2   | selecting default time zone ... UTC
virtual-audience-db-v2   | creating configuration files ... ok
virtual-audience-db-v2   | running bootstrap script ... ok
virtual-audience-db-v2   | sh: locale: not found
virtual-audience-db-v2   | 2025-08-20 01:08:45.112 UTC [35] WARNING:  no usable system locales were found
virtual-audience-db-v2   | performing post-bootstrap initialization ... ok
virtual-audience-db-v2   | syncing data to disk ... ok
virtual-audience-db-v2   | initdb: warning: enabling "trust" authentication for local connections
virtual-audience-db-v2   | initdb: hint: You can change this by editing pg_hba.conf or using the option -A, or --auth-local and --auth-host, the next time you run initdb.
virtual-audience-db-v2   |
virtual-audience-db-v2   |
virtual-audience-db-v2   | Success. You can now start the database server using:
virtual-audience-db-v2   |
virtual-audience-db-v2   |     pg_ctl -D /var/lib/postgresql/data -l logfile start
virtual-audience-db-v2   |
virtual-audience-db-v2   | waiting for server to start....2025-08-20 01:08:45.762 UTC [41] LOG:  starting PostgreSQL 15.14 on x86_64-pc-linux-musl, compiled by gcc (Alpine 14.2.0) 14.2.0, 64-bit
virtual-audience-db-v2   | 2025-08-20 01:08:45.763 UTC [41] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
virtual-audience-db-v2   | 2025-08-20 01:08:45.767 UTC [44] LOG:  database system was shut down at 2025-08-20 01:08:45 UTC
virtual-audience-db-v2   | 2025-08-20 01:08:45.776 UTC [41] LOG:  database system is ready to accept connections
virtual-audience-db-v2   |  done
virtual-audience-db-v2   | server started
virtual-audience-db-v2   | CREATE DATABASE
virtual-audience-db-v2   |
virtual-audience-db-v2   |
virtual-audience-db-v2   | /usr/local/bin/docker-entrypoint.sh: running /docker-entrypoint-initdb.d/init.sql
virtual-audience-db-v2   |  ?column?
virtual-audience-db-v2   | ----------
virtual-audience-db-v2   | (0 rows)
virtual-audience-db-v2   |
virtual-audience-db-v2   | You are now connected to database "virtual_audience" as user "postgres".
virtual-audience-db-v2   | DROP SCHEMA
virtual-audience-db-v2   | CREATE SCHEMA
virtual-audience-db-v2   | GRANT
virtual-audience-db-v2   | GRANT
virtual-audience-db-v2   | GRANT
virtual-audience-db-v2   | GRANT
virtual-audience-db-v2   | ALTER DEFAULT PRIVILEGES
virtual-audience-db-v2   | ALTER DEFAULT PRIVILEGES
virtual-audience-db-v2   | CREATE TABLE
virtual-audience-db-v2   | CREATE TABLE
virtual-audience-db-v2   | CREATE TABLE
virtual-audience-db-v2   | CREATE TABLE
virtual-audience-db-v2   | CREATE TABLE
virtual-audience-db-v2   | CREATE TABLE
virtual-audience-db-v2   | CREATE TABLE
virtual-audience-db-v2   | CREATE INDEX
virtual-audience-db-v2   | CREATE INDEX
virtual-audience-db-v2   | CREATE INDEX
virtual-audience-db-v2   | CREATE INDEX
virtual-audience-db-v2   | INSERT 0 1
virtual-audience-db-v2   | Virtual Audience Platform v2.0 database schema initialized successfully with session token support;
virtual-audience-db-v2   |
virtual-audience-db-v2   |
virtual-audience-db-v2   | waiting for server to shut down...2025-08-20 01:08:46.046 UTC [41] LOG:  received fast shutdown request
virtual-audience-db-v2   | .2025-08-20 01:08:46.047 UTC [41] LOG:  aborting any active transactions
virtual-audience-db-v2   | 2025-08-20 01:08:46.053 UTC [41] LOG:  background worker "logical replication launcher" (PID 47) exited with exit code 1
virtual-audience-db-v2   | 2025-08-20 01:08:46.054 UTC [42] LOG:  shutting down
virtual-audience-db-v2   | 2025-08-20 01:08:46.055 UTC [42] LOG:  checkpoint starting: shutdown immediate
virtual-audience-db-v2   | 2025-08-20 01:08:46.100 UTC [42] LOG:  checkpoint complete: wrote 946 buffers (5.8%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.025 s, sync=0.017 s, total=0.047 s; sync files=335, longest=0.002 s, average=0.001 s; distance=4394 kB, estimate=4394 kB
virtual-audience-db-v2   | 2025-08-20 01:08:46.112 UTC [41] LOG:  database system is shut down
virtual-audience-db-v2   |  done
virtual-audience-db-v2   | server stopped
virtual-audience-db-v2   |
virtual-audience-db-v2   | PostgreSQL init process complete; ready for start up.
virtual-audience-db-v2   |
virtual-audience-db-v2   | 2025-08-20 01:08:46.181 UTC [1] LOG:  starting PostgreSQL 15.14 on x86_64-pc-linux-musl, compiled by gcc (Alpine 14.2.0) 14.2.0, 64-bit
virtual-audience-db-v2   | 2025-08-20 01:08:46.181 UTC [1] LOG:  listening on IPv4 address "0.0.0.0", port 5432
virtual-audience-db-v2   | 2025-08-20 01:08:46.182 UTC [1] LOG:  listening on IPv6 address "::", port 5432
virtual-audience-db-v2   | 2025-08-20 01:08:46.184 UTC [1] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
virtual-audience-db-v2   | 2025-08-20 01:08:46.188 UTC [60] LOG:  database system was shut down at 2025-08-20 01:08:46 UTC
virtual-audience-db-v2   | 2025-08-20 01:08:46.198 UTC [1] LOG:  database system is ready to accept connections
virtual-audience-app-v2  | Setting up Virtual Audience Platform with authentication and URL shortening...
virtual-audience-app-v2  | Existing data detected (1 users) - preserving data and updating schema...
virtual-audience-app-v2  | Session tokens table exists - checking for any missing tables and columns...
virtual-audience-app-v2  | CREATE TABLE
virtual-audience-app-v2  | NOTICE:  relation "viewer_links" already exists, skipping
virtual-audience-app-v2  | CREATE TABLE
virtual-audience-app-v2  | DROP TABLE
virtual-audience-app-v2  | CREATE TABLE
virtual-audience-app-v2  | NOTICE:  Added updated_at column to users table
virtual-audience-app-v2  | DO
virtual-audience-app-v2  | DO
virtual-audience-app-v2  | DO
virtual-audience-app-v2  | DO
virtual-audience-app-v2  | Column checks completed
virtual-audience-app-v2  | No config path provided, using default 'drizzle.config.ts'
virtual-audience-app-v2  | Reading config file '/app/drizzle.config.ts'
virtual-audience-app-v2  | Using 'pg' driver for database querying
virtual-audience-app-v2  | [⣷] Pulling schema from database...
[⣯] Pulling schema from database...
[⣟] Pulling schema from database...
[✓] Pulling schema from database...
virtual-audience-app-v2  |
virtual-audience-app-v2  | Is generated_links table created or renamed from another table?
virtual-audience-app-v2  | ❯ + generated_links                          create table
virtual-audience-app-v2  |   ~ sessions › generated_links               rename table
virtual-audience-app-v2  |   ~ links › generated_links                  rename table
virtual-audience-app-v2  |   ~ generated_viewer_links › generated_links rename tablenpm notice
virtual-audience-app-v2  | npm notice New major version of npm available! 10.8.2 -> 11.5.2
virtual-audience-app-v2  | npm notice Changelog: https://github.com/npm/cli/releases/tag/v11.5.2
virtual-audience-app-v2  | npm notice To update run: npm install -g npm@11.5.2
virtual-audience-app-v2  | npm notice
virtual-audience-app-v2  | Starting Virtual Audience Platform...
virtual-audience-app-v2  | Using PostgreSQL driver for database connection
virtual-audience-app-v2  | Default admin user already exists
virtual-audience-app-v2  | 1:09:17 AM [express] serving on port 5000
virtual-audience-db-v2   | 2025-08-20 01:09:18.727 UTC [91] ERROR:  relation "session" does not exist at character 18
virtual-audience-db-v2   | 2025-08-20 01:09:18.727 UTC [91] STATEMENT:  SELECT sess FROM "session" WHERE sid = $1 AND expire >= to_timestamp($2)
virtual-audience-app-v2  | error: relation "session" does not exist
virtual-audience-app-v2  |     at /app/node_modules/pg-pool/index.js:45:11
virtual-audience-app-v2  |     at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
virtual-audience-app-v2  |     at async PGStore._asyncQuery (/app/node_modules/connect-pg-simple/index.js:322:21)
virtual-audience-db-v2   | 2025-08-20 01:09:22.670 UTC [92] ERROR:  relation "session" does not exist at character 18
virtual-audience-db-v2   | 2025-08-20 01:09:22.670 UTC [92] STATEMENT:  SELECT sess FROM "session" WHERE sid = $1 AND expire >= to_timestamp($2)
virtual-audience-app-v2  | error: relation "session" does not exist
virtual-audience-app-v2  |     at /app/node_modules/pg-pool/index.js:45:11
virtual-audience-app-v2  |     at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
virtual-audience-app-v2  |     at async PGStore._asyncQuery (/app/node_modules/connect-pg-simple/index.js:322:21)