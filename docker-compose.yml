services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: virtual-audience-app
    restart: unless-stopped
    ports:
      - "80:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
      - DATABASE_URL=${DATABASE_URL:-postgresql://postgres:password@db:5432/virtual_audience}
    depends_on:
      - db
    networks:
      - virtual-audience-network
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db:
    image: postgres:15-alpine
    container_name: virtual-audience-db
    restart: unless-stopped
    environment:
      - POSTGRES_DB=virtual_audience
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - virtual-audience-network
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d virtual_audience"]
      interval: 10s
      timeout: 5s
      retries: 5



volumes:
  postgres_data:

networks:
  virtual-audience-network:
    driver: bridge