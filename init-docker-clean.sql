-- Virtual Audience Platform v2.0 - Docker Production Database Schema
-- This file creates the complete database schema for Docker deployments
-- Last updated: August 20, 2025

-- Create ENUM types first (required by tables)
CREATE TYPE user_role AS ENUM ('admin', 'engineer', 'user');
CREATE TYPE message_type AS ENUM ('individual', 'broadcast', 'system');

-- Authentication and Session Management Tables

-- Session storage table for Passport.js authentication sessions
-- CRITICAL: This table is required for authentication to work
CREATE TABLE "session" (
        "sid" varchar PRIMARY KEY NOT NULL,
        "sess" jsonb NOT NULL,
        "expire" timestamp NOT NULL
);

-- Users table with role-based authentication
CREATE TABLE "users" (
        "id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
        "username" varchar(50) NOT NULL,
        "password" text NOT NULL,
        "email" varchar(100),
        "role" user_role DEFAULT 'user' NOT NULL,
        "created_at" timestamp DEFAULT now() NOT NULL,
        "updated_at" timestamp DEFAULT now() NOT NULL,
        CONSTRAINT "users_username_unique" UNIQUE("username")
);

-- Link Management Tables (Core Platform Functionality)

-- Guest streaming links table (main streaming functionality)
CREATE TABLE "generated_links" (
        "id" text PRIMARY KEY NOT NULL,
        "stream_name" text NOT NULL,
        "return_feed" text NOT NULL,
        "chat_enabled" boolean DEFAULT false NOT NULL,
        "url" text NOT NULL,
        "session_token" text UNIQUE,
        "created_at" timestamp DEFAULT now() NOT NULL,
        "expires_at" timestamp,
        "created_by" integer REFERENCES "users"("id")
);

-- Short links table for URL shortening (guest streams)
CREATE TABLE "short_links" (
        "id" text PRIMARY KEY NOT NULL,
        "stream_name" text NOT NULL,
        "return_feed" text NOT NULL,
        "chat_enabled" boolean DEFAULT false NOT NULL,
        "session_token" text UNIQUE,
        "created_at" timestamp DEFAULT now() NOT NULL,
        "expires_at" timestamp,
        "created_by" integer REFERENCES "users"("id")
);

-- Viewer-only links table (studio monitoring)
CREATE TABLE "viewer_links" (
        "id" text PRIMARY KEY NOT NULL,
        "return_feed" text NOT NULL,
        "chat_enabled" boolean DEFAULT false NOT NULL,
        "url" text NOT NULL,
        "session_token" text UNIQUE,
        "created_at" timestamp DEFAULT now() NOT NULL,
        "expires_at" timestamp,
        "created_by" integer REFERENCES "users"("id")
);

-- Short viewer links table for URL shortening (viewer streams)
CREATE TABLE "short_viewer_links" (
        "id" text PRIMARY KEY NOT NULL,
        "return_feed" text NOT NULL,
        "chat_enabled" boolean DEFAULT false NOT NULL,
        "session_token" text UNIQUE,
        "created_at" timestamp DEFAULT now() NOT NULL,
        "expires_at" timestamp,
        "created_by" integer REFERENCES "users"("id")
);

-- Security and Session Token Management

-- Session tokens table for single-use link security
CREATE TABLE "session_tokens" (
        "id" text PRIMARY KEY NOT NULL,
        "link_id" text,
        "link_type" text,
        "created_at" timestamp DEFAULT now() NOT NULL,
        "expires_at" timestamp NOT NULL,
        "created_by" integer REFERENCES "users"("id")
);

-- Chat System Tables (Real-time Communication)

-- Chat messages table for guest communication
CREATE TABLE "chat_messages" (
        "id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
        "session_id" text NOT NULL,
        "sender_id" integer REFERENCES "users"("id"),
        "sender_name" text NOT NULL,
        "recipient_id" integer REFERENCES "users"("id"),
        "message_type" message_type DEFAULT 'individual' NOT NULL,
        "content" text NOT NULL,
        "created_at" timestamp DEFAULT now() NOT NULL
);

-- Chat participants table for session management
CREATE TABLE "chat_participants" (
        "id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
        "session_id" text NOT NULL,
        "user_id" integer REFERENCES "users"("id"),
        "username" text NOT NULL,
        "role" user_role NOT NULL,
        "is_online" boolean DEFAULT true NOT NULL,
        "joined_at" timestamp DEFAULT now() NOT NULL,
        "last_seen_at" timestamp DEFAULT now() NOT NULL
);

-- Performance Indexes (Critical for Production)

-- Session management indexes
CREATE INDEX "IDX_session_expire" ON "session" ("expire");

-- User management indexes
CREATE INDEX "users_role_idx" ON "users" ("role");
CREATE INDEX "users_created_at_idx" ON "users" ("created_at");

-- Link management indexes
CREATE INDEX "generated_links_expires_at_idx" ON "generated_links" ("expires_at");
CREATE INDEX "generated_links_created_by_idx" ON "generated_links" ("created_by");
CREATE INDEX "generated_links_session_token_idx" ON "generated_links" ("session_token");

CREATE INDEX "short_links_expires_at_idx" ON "short_links" ("expires_at");
CREATE INDEX "short_links_created_by_idx" ON "short_links" ("created_by");
CREATE INDEX "short_links_session_token_idx" ON "short_links" ("session_token");

CREATE INDEX "viewer_links_expires_at_idx" ON "viewer_links" ("expires_at");
CREATE INDEX "viewer_links_created_by_idx" ON "viewer_links" ("created_by");
CREATE INDEX "viewer_links_session_token_idx" ON "viewer_links" ("session_token");

CREATE INDEX "short_viewer_links_expires_at_idx" ON "short_viewer_links" ("expires_at");
CREATE INDEX "short_viewer_links_created_by_idx" ON "short_viewer_links" ("created_by");
CREATE INDEX "short_viewer_links_session_token_idx" ON "short_viewer_links" ("session_token");

-- Session token indexes
CREATE INDEX "session_tokens_link_id_idx" ON "session_tokens" ("link_id");
CREATE INDEX "session_tokens_link_type_idx" ON "session_tokens" ("link_type");
CREATE INDEX "session_tokens_expires_at_idx" ON "session_tokens" ("expires_at");

-- Chat system indexes for performance
CREATE INDEX "chat_messages_session_id_idx" ON "chat_messages" ("session_id");
CREATE INDEX "chat_messages_sender_id_idx" ON "chat_messages" ("sender_id");
CREATE INDEX "chat_messages_created_at_idx" ON "chat_messages" ("created_at");
CREATE INDEX "chat_messages_message_type_idx" ON "chat_messages" ("message_type");

CREATE INDEX "chat_participants_session_id_idx" ON "chat_participants" ("session_id");
CREATE INDEX "chat_participants_user_id_idx" ON "chat_participants" ("user_id");
CREATE INDEX "chat_participants_is_online_idx" ON "chat_participants" ("is_online");
CREATE INDEX "chat_participants_role_idx" ON "chat_participants" ("role");

-- Initial Data Setup (Production Ready)

-- Create default admin user with secure password
-- Password: "virtualaudience2025" (hashed with scrypt)
-- IMPORTANT: Change this password immediately after deployment
INSERT INTO "users" ("username", "email", "password", "role")
VALUES (
    'admin', 
    'admin@stagelinq.com', 
    'd50f2345138be5a9d2e393d0d35bc3e79b6e0de2ef0fcbb2e6420cbbc637db4e25cfbb47c1e3079f805a84dc9379c559747529728eb0d1c35b92b1b07fb0d68c.2dc356427cd6587959802211b6e98ace', 
    'admin'
)
ON CONFLICT ("username") DO NOTHING;